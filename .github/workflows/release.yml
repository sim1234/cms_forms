name: Release pipeline

on:
  push:
    tags:
      - '*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-build.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload source release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/django_cms_forms-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: django_cms_forms-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload wheel release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/django_cms_forms-${{ steps.tag.outputs.tag }}-py3-none-any.whl
          asset_name: django_cms_forms-${{ steps.tag.outputs.tag }}-py3-none-any.whl
          asset_content_type: application/zip

      - name: Upload to pypi
        run: |
          twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
