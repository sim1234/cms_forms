name: Test pipeline

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black

    - name: Lint with flake8
      run: |
        flake8 .

    - name: Check with black
      run: |
        black --check --line-length 120 .

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/examples
          export DJANGO_SETTINGS_MODULE=installation.settings
          pytest --cov cms_forms tests --cov-report xml

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

      - name: Run selenium tests
        run: |
          docker-compose up --build --abort-on-container-exit

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-build.txt

      - name: Build
        run: |
          export PATCH_VERSION=$(git rev-list --count HEAD).$(date +%s)
          python setup.py sdist bdist_wheel

      - name: Upload to pypi
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }} dist/*
